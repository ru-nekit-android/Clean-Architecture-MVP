apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'me.tatarka.retrolambda'
apply from: '../dependencies.gradle'

jacoco {
    toolVersion versions.jacoco
}

//noinspection GroovyUnusedAssignment
sourceCompatibility = 1.8
//noinspection GroovyUnusedAssignment
targetCompatibility = 1.8

configurations {
    provided
}

retrolambda {
    oldJdk JAVA7_HOME
    jdk JAVA8_HOME
}

sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

dependencies {

    //noinspection GroovyAssignabilityCheck
    compile libraries.rxJava

    //noinspection GroovyAssignabilityCheck
    testCompile testLibraries.junit
    testCompile testLibraries.mockitoCore

}

jacocoTestReport {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."

    reports {
        xml.enabled true
        csv.enabled false
        xml.destination "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        html.destination "${buildDir}/reports/coverage"
    }

    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            '**/Artwork.class',
                            '**/ArtworkInfo*.class',
                            '**/Cast.class',
                            '**/CastMember.class',
                            '**/ChannelInfo.class',
                            '**/ContentType.class',
                            '**/Encoder.class',
                            '**/Input.class',
                            '**/LiveStreamInfo.class',
                            '**/Program.class',
                            '**/RecordingInfo.class',
                            '**/SearchResult.class',
                            '**/SearchResult$Type.class',
                            '**/SettingsKeys.class',
                            '**/TitleInfo.class',
                            '**/VideoMetadataInfo.class',
                            '**/*_Factory.class',
                    ])
        })
    }

    doLast {
        println "coveralls report has been generated to file://${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
        println "jacoco report has been generated to file://${reports.html.destination}/index.html"
    }

}

//check.dependsOn jacocoTestReport